/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package View;

import Model.AHP;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Edwin
 */

public class AHPWindow extends javax.swing.JFrame {

    public AHPWindow() {
        super("AHP");
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        numAlternatives = new javax.swing.JTextField();
        btncreateAlternativesTable = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableAlternatives = new javax.swing.JTable();
        labelAlternatives = new javax.swing.JLabel();
        btnfindAlternative = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        textareaCriteria = new javax.swing.JTextArea();
        labelCriteria = new javax.swing.JLabel();
        btncreateCriteriaTable = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableCriteria = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        numAlternatives.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numAlternativesActionPerformed(evt);
            }
        });

        btncreateAlternativesTable.setText("Crear alternativas");
        btncreateAlternativesTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncreateAlternativesTableActionPerformed(evt);
            }
        });

        tableAlternatives.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tableAlternatives);

        labelAlternatives.setText("Alternativas:");

        btnfindAlternative.setText("Encontrar Alernativa");
        btnfindAlternative.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnfindAlternativeActionPerformed(evt);
            }
        });

        textareaCriteria.setColumns(20);
        textareaCriteria.setRows(5);
        jScrollPane3.setViewportView(textareaCriteria);

        labelCriteria.setText("Ingrese Criterios:");

        btncreateCriteriaTable.setText("Crear criterios");
        btncreateCriteriaTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncreateCriteriaTableActionPerformed(evt);
            }
        });

        tableCriteria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableCriteria.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tableCriteriaPropertyChange(evt);
            }
        });
        jScrollPane2.setViewportView(tableCriteria);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelAlternatives, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(numAlternatives, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(31, 31, 31)
                                .addComponent(btncreateAlternativesTable))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 601, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelCriteria)
                            .addComponent(btncreateCriteriaTable, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(226, 226, 226)
                .addComponent(btnfindAlternative)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelCriteria)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(btncreateCriteriaTable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(labelAlternatives)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(numAlternatives, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btncreateAlternativesTable))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnfindAlternative)
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void numAlternativesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numAlternativesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numAlternativesActionPerformed

    
    private void btncreateAlternativesTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncreateAlternativesTableActionPerformed
        // TODO add your handling code here:        
        int numAlter = Integer.parseInt(numAlternatives.getText());        
        DefaultTableModel model = (DefaultTableModel)tableAlternatives.getModel();
        model.setRowCount(numAlter);
        model.setColumnCount(arrayCriteria.length+1);
        JTableHeader th = tableAlternatives.getTableHeader();
        TableColumnModel tcm = th.getColumnModel();
        tcm.getColumn(0).setHeaderValue("Alternativas");
        for (int i = 1; i < model.getColumnCount(); i++) {
            tcm.getColumn(i).setHeaderValue(arrayCriteria[i-1]);    
        }                           
        for (int i = 0; i < model.getRowCount(); i++) {
            for (int j = 0; j < model.getColumnCount(); j++) {
                if( j==0 ){
                    tableAlternatives.setValueAt((i+1), i, j);
                }else{
                    //tableAlternatives.setValueAt(0, i, j);
                }
            }
        }
    }//GEN-LAST:event_btncreateAlternativesTableActionPerformed

    private void btnfindAlternativeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnfindAlternativeActionPerformed
        // TODO add your handling code here:                          
        AHP ahp = new AHP();
        double [][]matrixcriteria = ahp.createMatrix(tableCriteria);        
        double [][]matrixalternatives = ahp.createMatrix(tableAlternatives);
        double []vectorPriorityCriteria = ahp.calculatePrioritiesVector(matrixcriteria,arrayCriteria,false);                       
        double matrixfinal[][] = new double[tableAlternatives.getRowCount()][tableAlternatives.getColumnCount()-1];        
        for( int z=0; z < tableAlternatives.getColumnCount()-1 ;z++ ){
            double []criterion = new double[tableAlternatives.getRowCount()];
            for (int i = 0; i < tableAlternatives.getRowCount(); i++) {
                criterion[i] = matrixalternatives[i][z];    
            }
            double matrixPairwiseComparison[][] = ahp.calculateMatrixPairwiseComparison(criterion, arrayCriteria, z);
            double priorityVector[] = ahp.calculatePrioritiesVector(matrixPairwiseComparison,arrayCriteria,true);                       
            for (int i = 0; i < priorityVector.length; i++) {
                matrixfinal[i][z] = priorityVector[i];                
            }
        }
        double finalresult[] = ahp.calculateResult(matrixfinal, vectorPriorityCriteria, tableAlternatives);                                            
        new AHPResultsWindow(ahp.getOutputlog(),finalresult);                
    }//GEN-LAST:event_btnfindAlternativeActionPerformed
        
    private String []arrayCriteria;    
    
    private void btncreateCriteriaTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncreateCriteriaTableActionPerformed
        // TODO add your handling code here:
        arrayCriteria = textareaCriteria.getText().split("[\\r\\n]+");                
        DefaultTableModel model = (DefaultTableModel)tableCriteria.getModel();
        model.setRowCount(arrayCriteria.length);
        model.setColumnCount(arrayCriteria.length+1);
        JTableHeader th = tableCriteria.getTableHeader();
        TableColumnModel tcm = th.getColumnModel();
        tcm.getColumn(0).setHeaderValue("Criterios"); 
        for (int i = 1; i < model.getColumnCount(); i++) {
            tcm.getColumn(i).setHeaderValue(arrayCriteria[i-1]);    
        }                           
        for (int i = 0; i < model.getRowCount(); i++) {
            for (int j = 0; j < model.getColumnCount(); j++) {
                if( j==0 ){
                    tableCriteria.setValueAt(arrayCriteria[i], i, j);
                }else if( i+1==j ){
                    tableCriteria.setValueAt(1, i, j);
                }
            }
        }     
    }//GEN-LAST:event_btncreateCriteriaTableActionPerformed

    private void tableCriteriaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tableCriteriaPropertyChange
        // TODO add your handling code here:
        int row = tableCriteria.getSelectedRow();
        int column = tableCriteria.getSelectedColumn();
        if( row!=-1 && tableCriteria.getValueAt(row,column) != null && 
            !tableCriteria.getValueAt(row,column).equals("") &&
            !tableCriteria.getValueAt(row,column).toString().endsWith(" ") && 
            column != 0 ){ 
            tableCriteria.setValueAt(1/Double.parseDouble(tableCriteria.getValueAt(row,column).toString()), column-1, row+1);
        }
    }//GEN-LAST:event_tableCriteriaPropertyChange

    /**
     * @param args the command line arguments
     */
    
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(AHPWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(AHPWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(AHPWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(AHPWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                //new AHPWindow().setVisible(true);
//            }
//        });
//    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btncreateAlternativesTable;
    private javax.swing.JButton btncreateCriteriaTable;
    private javax.swing.JButton btnfindAlternative;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel labelAlternatives;
    private javax.swing.JLabel labelCriteria;
    private javax.swing.JTextField numAlternatives;
    private javax.swing.JTable tableAlternatives;
    private javax.swing.JTable tableCriteria;
    private javax.swing.JTextArea textareaCriteria;
    // End of variables declaration//GEN-END:variables
}
